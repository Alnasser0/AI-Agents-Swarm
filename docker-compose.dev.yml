# ================================
# Development Override for Docker Compose
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d
# ================================

services:
  api:
    build:
      target: builder  # Use builder stage for faster development builds
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - RELOAD=true
    volumes:
      - .:/app:ro  # Mount source code for hot reloading
      - /app/__pycache__  # Exclude pycache from host
    command: uvicorn api.server:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - __pycache__/
            - .git/
            - logs/
        - action: rebuild
          path: requirements.txt

  dashboard:
    environment:
      - NODE_ENV=development
    volumes:
      - ./dashboard-react:/app:ro
      - /app/node_modules
      - /app/.next
    command: npm run dev
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./dashboard-react
          target: /app
          ignore:
            - node_modules/
            - .next/
        - action: rebuild
          path: ./dashboard-react/package.json

  # Development database for testing
  postgres:
    image: postgres:15-alpine
    container_name: ai-agents-postgres-dev
    environment:
      - POSTGRES_DB=ai_agents_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d ai_agents_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - full

volumes:
  postgres_dev_data:
    driver: local
    name: ai-agents-postgres-dev-data
